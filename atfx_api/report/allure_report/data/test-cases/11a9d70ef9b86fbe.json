{"uid":"11a9d70ef9b86fbe","name":"Skrill出金：BOS审核出金，转完成","fullName":"testcase.test_old_mu_ewallet_withdrawal.TestEWalletWithdrawal#test_skrill_withdrawal","historyId":"167d7c352ebd9dde578c3d24cfd359fd","time":{"start":1683786432791,"stop":1683786435077,"duration":2286},"description":"\n        出金逻辑如下：\n        通过接口查询交易账号余额，判断余额是否为0，为0跳过用例\n        通过接口查询交易账号是否存在未处理的出金，存在则跳过用例\n        接口查询该账号是否存在Skrill出金方式，不存在则跳过用例\n        以上条件都满足，出金。BOS转成功。断言出金接口返回数据\n        ","descriptionHtml":"<pre><code>    出金逻辑如下：\n    通过接口查询交易账号余额，判断余额是否为0，为0跳过用例\n    通过接口查询交易账号是否存在未处理的出金，存在则跳过用例\n    接口查询该账号是否存在Skrill出金方式，不存在则跳过用例\n    以上条件都满足，出金。BOS转成功。断言出金接口返回数据\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: 断言失败","statusTrace":"self = <test_old_mu_ewallet_withdrawal.TestEWalletWithdrawal object at 0x00000220D3516490>, case = <handle_excel.Case object at 0x00000220D33E0790>\n\n    @allure.title(\"Skrill出金：{case.title}\")\n    @pytest.mark.high\n    @pytest.mark.parametrize('case',test_data)\n    #@pytest.mark.flaky(reruns=2, reruns_delay=2)\n    @pytest.mark.run(order=8)\n    def test_skrill_withdrawal(self,case):\n        \"\"\"\n        出金逻辑如下：\n        通过接口查询交易账号余额，判断余额是否为0，为0跳过用例\n        通过接口查询交易账号是否存在未处理的出金，存在则跳过用例\n        接口查询该账号是否存在Skrill出金方式，不存在则跳过用例\n        以上条件都满足，出金。BOS转成功。断言出金接口返回数据\n        \"\"\"\n        setattr(SystemEnv,'eWalletName','Skrill')\n        if hasattr(SystemEnv,'balance') and SystemEnv.balance < 1:\n            pytest.skip('交易账号余额为0跳过用例')\n        elif hasattr(SystemEnv,'exist') and SystemEnv.exist == True:\n            pytest.skip('交易有未处理的出金请求，跳过用例')\n        elif hasattr(SystemEnv,'Skrill') and SystemEnv.Skrill == []:\n            pytest.skip('不存在Skrill出金方式，跳过用例')\n        else:\n>           public_request(case)\n\ntestcase\\test_old_mu_ewallet_withdrawal.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\handle_requests.py:211: in public_request\n    assert_db(case.excepted_db)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nassert_db_str = '[{\"sql\":\"SELECT Ticket_No,ATNumber, TYPE, Amount, MT4_Account, Currency, To_Amt, Bank_Ref_No, Curr_Status, Rate, Chan...astUpdateDate#\\', \\'COMMENT\\': \\'Withdrawal-8-#ID#\\', \\'Entity\\': \\'#AREA#\\', \\'Agent\\': \\'#parentAccountNumber#\\' }}]'\n\n    @allure.step('对数据库进行断言')\n    def assert_db(assert_db_str:str)->None:\n        logger.info('数据库断言字符串中是否有要替换的占位符')\n        assert_replace_str= replace_mark_by_data(assert_db_str)\n        for ass in eval(assert_replace_str):\n            res = database.search_in_mysql(ass.get('sql'),many=1) #返回一条数据，字典\n            exp =ass.get('check')\n    \n            #时间转换\n            try:\n                if res.get('Last_Update'):\n                    res['Last_Update'] = res['Last_Update'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Data_Date'):\n                    res['Data_Date'] = res['Data_Date'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Close_Date'):\n                    res['Close_Date'] = res['Close_Date'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Create_Date'):\n                    res['Create_Date'] = res['Create_Date'].strftime('%Y-%m-%d %H:%M:%S')\n    \n                if exp.get('Last_Update'):\n                    exp['Last_Update'] = exp['Last_Update'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Data_Date'):\n                    exp['Data_Date'] = exp['Data_Date'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Close_Date'):\n                    exp['Close_Date'] = exp['Close_Date'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Create_Date'):\n                    exp['Create_Date'] = exp['Create_Date'].replace('T',' ').replace('Z','')[:-4]\n            except:\n                pass\n            dif = res.keys() & exp\n            diff_vals = [(k, res[k], exp[k]) for k in dif if res[k] != exp[k]]\n            same_vals = [(k, res[k], exp[k]) for k in dif if res[k] == exp[k]]\n            if len(diff_vals) !=0:\n                with allure.step(f'断言数据库断言失败字段：{diff_vals}'):\n                    logger.warning(f'数据库断言失败，数据库查询与期望不一致：{diff_vals}')\n                with allure.step(f'断言数据库断言成功字段：{same_vals}'):\n                    logger.info(f'数据库断言成功字段：{same_vals}')\n                    # pytest.assume(res[k] == exp[k])\n>               raise AssertionError(f'断言失败')\nE               AssertionError: 断言失败\n\ntools\\handle_assert.py:88: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1683786425371,"stop":1683786425685,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"deposit_withdrawal_info","time":{"start":1683786425685,"stop":1683786425685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"from_bos_to_cp_get_token","time":{"start":1683786425686,"stop":1683786426667,"duration":981},"status":"passed","steps":[{"name":"发起请求，请求url：https://at-bos-api-sit.atfxdev.com/v1/privilege/login，\n请求头：{},\n请求数据：json:{'account': 'tyler.tang', 'passwd': 'a12e16f04b1794c327b5d70f8954ff2f'};\ndata:None;\nfiles:None;\nparams:None","time":{"start":1683786426152,"stop":1683786426154,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"发起请求，请求url：https://at-bos-api-sit.atfxdev.com/v1/mu/loginToClientPortal/login，\n请求头：{'accept-language': 'zh,zh-CN;q=0.9,en;q=0.8', 'authentication': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoidHlsZXIudGFuZyIsImlhdCI6MTY4Mzc4NjQyNiwiZXhwIjoxNjgzODcyODI2fQ.uRdgAQOHY2ypP074RBid1meZxpsr8W_Dqm0N0xJ2KLM'},\n请求数据：json:{'domain': 'https://pj-clipor-int-sit.agile168.com', 'loginType': 'accountNumber', 'loginNumber': 1500000243, 'lang': 'hk', 'entity': 'MU', 'ip': '202.85.14.161'};\ndata:None;\nfiles:None;\nparams:None","time":{"start":1683786426297,"stop":1683786426298,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":2,"hasContent":true}],"testStage":{"description":"\n        出金逻辑如下：\n        通过接口查询交易账号余额，判断余额是否为0，为0跳过用例\n        通过接口查询交易账号是否存在未处理的出金，存在则跳过用例\n        接口查询该账号是否存在Skrill出金方式，不存在则跳过用例\n        以上条件都满足，出金。BOS转成功。断言出金接口返回数据\n        ","status":"failed","statusMessage":"AssertionError: 断言失败","statusTrace":"self = <test_old_mu_ewallet_withdrawal.TestEWalletWithdrawal object at 0x00000220D3516490>, case = <handle_excel.Case object at 0x00000220D33E0790>\n\n    @allure.title(\"Skrill出金：{case.title}\")\n    @pytest.mark.high\n    @pytest.mark.parametrize('case',test_data)\n    #@pytest.mark.flaky(reruns=2, reruns_delay=2)\n    @pytest.mark.run(order=8)\n    def test_skrill_withdrawal(self,case):\n        \"\"\"\n        出金逻辑如下：\n        通过接口查询交易账号余额，判断余额是否为0，为0跳过用例\n        通过接口查询交易账号是否存在未处理的出金，存在则跳过用例\n        接口查询该账号是否存在Skrill出金方式，不存在则跳过用例\n        以上条件都满足，出金。BOS转成功。断言出金接口返回数据\n        \"\"\"\n        setattr(SystemEnv,'eWalletName','Skrill')\n        if hasattr(SystemEnv,'balance') and SystemEnv.balance < 1:\n            pytest.skip('交易账号余额为0跳过用例')\n        elif hasattr(SystemEnv,'exist') and SystemEnv.exist == True:\n            pytest.skip('交易有未处理的出金请求，跳过用例')\n        elif hasattr(SystemEnv,'Skrill') and SystemEnv.Skrill == []:\n            pytest.skip('不存在Skrill出金方式，跳过用例')\n        else:\n>           public_request(case)\n\ntestcase\\test_old_mu_ewallet_withdrawal.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\handle_requests.py:211: in public_request\n    assert_db(case.excepted_db)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nassert_db_str = '[{\"sql\":\"SELECT Ticket_No,ATNumber, TYPE, Amount, MT4_Account, Currency, To_Amt, Bank_Ref_No, Curr_Status, Rate, Chan...astUpdateDate#\\', \\'COMMENT\\': \\'Withdrawal-8-#ID#\\', \\'Entity\\': \\'#AREA#\\', \\'Agent\\': \\'#parentAccountNumber#\\' }}]'\n\n    @allure.step('对数据库进行断言')\n    def assert_db(assert_db_str:str)->None:\n        logger.info('数据库断言字符串中是否有要替换的占位符')\n        assert_replace_str= replace_mark_by_data(assert_db_str)\n        for ass in eval(assert_replace_str):\n            res = database.search_in_mysql(ass.get('sql'),many=1) #返回一条数据，字典\n            exp =ass.get('check')\n    \n            #时间转换\n            try:\n                if res.get('Last_Update'):\n                    res['Last_Update'] = res['Last_Update'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Data_Date'):\n                    res['Data_Date'] = res['Data_Date'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Close_Date'):\n                    res['Close_Date'] = res['Close_Date'].strftime('%Y-%m-%d %H:%M:%S')\n                if res.get('Create_Date'):\n                    res['Create_Date'] = res['Create_Date'].strftime('%Y-%m-%d %H:%M:%S')\n    \n                if exp.get('Last_Update'):\n                    exp['Last_Update'] = exp['Last_Update'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Data_Date'):\n                    exp['Data_Date'] = exp['Data_Date'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Close_Date'):\n                    exp['Close_Date'] = exp['Close_Date'].replace('T',' ').replace('Z','')[:-4]\n                if exp.get('Create_Date'):\n                    exp['Create_Date'] = exp['Create_Date'].replace('T',' ').replace('Z','')[:-4]\n            except:\n                pass\n            dif = res.keys() & exp\n            diff_vals = [(k, res[k], exp[k]) for k in dif if res[k] != exp[k]]\n            same_vals = [(k, res[k], exp[k]) for k in dif if res[k] == exp[k]]\n            if len(diff_vals) !=0:\n                with allure.step(f'断言数据库断言失败字段：{diff_vals}'):\n                    logger.warning(f'数据库断言失败，数据库查询与期望不一致：{diff_vals}')\n                with allure.step(f'断言数据库断言成功字段：{same_vals}'):\n                    logger.info(f'数据库断言成功字段：{same_vals}')\n                    # pytest.assume(res[k] == exp[k])\n>               raise AssertionError(f'断言失败')\nE               AssertionError: 断言失败\n\ntools\\handle_assert.py:88: AssertionError","steps":[{"name":"判断是否需要对字符串进行替换操作，将#key#替换成真实的值","time":{"start":1683786432831,"stop":1683786432873,"duration":42},"status":"passed","steps":[{"name":"字符串中有要替换的mark,从全局变量或者内置方法中替换mark","time":{"start":1683786432831,"stop":1683786432832,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #ENVIRONMENT# 替换为sit","time":{"start":1683786432848,"stop":1683786432848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的字符串为str：\nhttps://at-bos-api-sit.atfxdev.com/v1/mu/withdrawal/success","time":{"start":1683786432849,"stop":1683786432873,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"req_str","value":"'https://at-bos-api-#ENVIRONMENT#.atfxdev.com/v1/mu/withdrawal/success'"},{"name":"pattern","value":"'#(\\w+)#'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":3,"hasContent":true},{"name":"请求发送以前，对请求数据进行内置方法处理：","time":{"start":1683786432873,"stop":1683786432993,"duration":120},"status":"passed","steps":[{"name":"处理前置sql,判断sql中是否有要替换的mark","time":{"start":1683786432875,"stop":1683786432982,"duration":107},"status":"passed","steps":[{"name":"将数据库读取的数据作为全局变量：Ticket_No:WD-645c8ac0b8d71500120b861e","time":{"start":1683786432980,"stop":1683786432982,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"sql_str","value":"'SELECT Ticket_No FROM datawarehouse_two_mu_sit.transaction ORDER BY id desc limit 1'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true},{"name":"请求数据json是否有要替换的占位符","time":{"start":1683786432982,"stop":1683786432991,"duration":9},"status":"passed","steps":[{"name":"判断是否需要对字符串进行替换操作，将#key#替换成真实的值","time":{"start":1683786432983,"stop":1683786432991,"duration":8},"status":"passed","steps":[{"name":"字符串中有要替换的mark,从全局变量或者内置方法中替换mark","time":{"start":1683786432984,"stop":1683786432985,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #AREA# 替换为MU","time":{"start":1683786432989,"stop":1683786432989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #ID# 替换为178","time":{"start":1683786432990,"stop":1683786432990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的字符串为str：\n{\n \"entity\": \"MU\",\n \"ids\": [{\n  \"ID\": 178\n }],\n \"status\": \"S\"\n}","time":{"start":1683786432990,"stop":1683786432991,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"req_str","value":"'{\n \"entity\": \"#AREA#\",\n \"ids\": [{\n  \"ID\": #ID#\n }],\n \"status\": \"S\"\n}'"},{"name":"pattern","value":"'#(\\w+)#'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":4,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":5,"hasContent":true},{"name":"该请求需要传递token，从系统变量中获取bos_token：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoidHlsZXIudGFuZyIsImlhdCI6MTY4Mzc4NjQyNiwiZXhwIjoxNjgzODcyODI2fQ.uRdgAQOHY2ypP074RBid1meZxpsr8W_Dqm0N0xJ2KLM,请求域名：at-bos-api-sit.atfxdev.com","time":{"start":1683786432991,"stop":1683786432991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":9,"hasContent":true},{"name":"发起http/https请求","time":{"start":1683786432993,"stop":1683786434673,"duration":1680},"status":"passed","steps":[{"name":"发起请求，请求url：https://at-bos-api-sit.atfxdev.com/v1/mu/withdrawal/success，\n请求头：{'accept-language': 'zh,zh-CN;q=0.9,en;q=0.8', 'authentication': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoidHlsZXIudGFuZyIsImlhdCI6MTY4Mzc4NjQyNiwiZXhwIjoxNjgzODcyODI2fQ.uRdgAQOHY2ypP074RBid1meZxpsr8W_Dqm0N0xJ2KLM'},\n请求数据：json:{'entity': 'MU', 'ids': [{'ID': 178}], 'status': 'S'};\ndata:None;\nfiles:None;\nparams:None","time":{"start":1683786433002,"stop":1683786433006,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true},{"name":"处理响应数据","time":{"start":1683786434673,"stop":1683786435076,"duration":403},"status":"failed","statusMessage":"AssertionError: 断言失败\n","statusTrace":"  File \"c:\\Users\\tyler.tang\\Desktop\\Code\\atfx_api\\tools\\handle_requests.py\", line 211, in public_request\n    assert_db(case.excepted_db)\n  File \"C:\\Users\\tyler.tang\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"c:\\Users\\tyler.tang\\Desktop\\Code\\atfx_api\\tools\\handle_assert.py\", line 88, in assert_db\n    raise AssertionError(f'断言失败')\n","steps":[{"name":"将响应数据转换为字典类型","time":{"start":1683786434673,"stop":1683786434678,"duration":5},"status":"passed","steps":[{"name":"将响应的json格式数据转换位字典","time":{"start":1683786434675,"stop":1683786434675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"最终响应结果为：\n{'code': 1002, 'message': 'Operated success', 'data': {'succ': [{'mtRefNo': '15798241', 'accountNumber': 1500000243, 'clnName': 'TESTTYLER', 'tradeAccount': '16300113', 'tradeAccountType': 'mt4', 'tradeAccountServer': 'mt4_s02', 'tradeAccountGroup': 'demoforex', 'country': 'AFG', 'accType': 'IB', 'currStatus': 'S', 'originalAmt': 1101, 'mtAmt': 1101, 'toCcy': 'USD', 'settleAmt': 1101, 'settleCcy': 'USD', 'referRate': 1, 'realRate': 1, 'feeInd': '', 'balance': 1162, 'equity': 1162, 'margin': 0, 'marginFree': 1162, 'marginLevel': None, 'openOrders': 'N', 'dataDate': '2023-05-11T06:24:19.000Z', 'remark': '', 'feeIndMin': None, 'feeIndOrder': None, 'charge': 0, 'channel': 'E-wallet', 'markUp': 0, 'source': 'System', 'createDate': '2023-05-11T06:27:12.299Z', 'createBy': 'SYSTEM', 'lastUpdateDate': '2023-05-11T06:27:14.238Z', 'updateBy': '', 'processBy': 'tyler.tang', 'approveBy': '', 'pspId': '', 'isDelete': False, 'mtRegion': 'SEA', 'sentTime': None, 'processDate': '2023-05-11T06:27:14.313Z', 'isFromFundAdjust': False, 'isFromSettlement': False, 'createDate_mt': '2023-05-11T09:27:12.299Z', 'mtRemark': '', 'wuuid': '16837864319082013359', 'negativeTradeAccountArr': [''], '_id': '645c8ac0b8d71500120b861e', 'ID': 178, 'reasons': {'cancelReason': '', 'failReason': '', 'feeChargedReason': [], '_id': '645c8ac0b8d71500120b861f'}, 'bankInfo': {'bankNameInfo': {'bankNameCountry': 'AFG', 'bankNameCurrency': 'USD', 'bankNameId': ''}, 'beneficiaryName': '', 'beneficiaryFirstName': '', 'beneficiaryMiddleName': '', 'beneficiaryLastName': '', 'beneficiaryAddress': '', 'bankCardNo': '', 'bank': '', 'bankAccout': '', 'branchName': '', 'branchCity': '', 'branchProvince': '', 'bankAddress': '', 'swiftCode': '', 'iban': '', 'postalCode': '', 'publicPrivateAccount': '', 'CNAPScode': '', 'issueMethod': '', '_id': '645c8ac0b8d71500120b8620'}, 'ewalletInfo': {'ewalletName': 'Skrill', 'ewalletType': 'Email', 'ewalletPayNo': '9999999@qq.com', 'others': '', '_id': '645c8ac0b8d71500120b8621'}, '__v': 0}], 'fail': []}}","time":{"start":1683786434675,"stop":1683786434678,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"resp_decrypt","value":"None"},{"name":"resp","value":"<Response [200]>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":2,"hasContent":true},{"name":"从响应结果中提取数据设置为全局变量","time":{"start":1683786434678,"stop":1683786434783,"duration":105},"status":"passed","steps":[{"name":"通过jsonpath表达式从响应结果中提取数据，并设置为全局变量","time":{"start":1683786434679,"stop":1683786434783,"duration":104},"status":"passed","steps":[{"name":"判断是否需要对字符串进行替换操作，将#key#替换成真实的值","time":{"start":1683786434680,"stop":1683786434688,"duration":8},"status":"passed","steps":[{"name":"字符串中没有要替换的mark","time":{"start":1683786434680,"stop":1683786434681,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的字符串为str：\n{\"mtRefNo\":\"$..mtRefNo\",\"clnName\":\"$..clnName\",\"settleAmt\":\"$..settleAmt\",\"mtAmt\":\"$..mtAmt\",\"referRate\":\"$..referRate\",\"margin\":\"$..margin\",\"marginFree\":\"$..marginFree\",\"marginLevel\":\"$..marginLevel\",\"openOrders\":\"$..openOrders\",\"dataDate\":\"$..dataDate\",\"remark\":\"$..remark\",\"channel\":\"$..channel\",\"createDate\":\"$..createDate\",\"createBy\":\"$..createBy\",\"lastUpdateDate\":\"$..lastUpdateDate\",\"updateBy\":\"$..updateBy\",\"processBy\":\"$..processBy\",\"approveBy\":\"$..approveBy\",\"pspId\":\"$..pspId\",\"feeIndMin\":\"$..feeIndMin\",\"feeIndOrder\":\"$..feeIndOrder\",\"feeInd\":\"$..feeInd\"}","time":{"start":1683786434681,"stop":1683786434687,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"req_str","value":"'{\"mtRefNo\":\"$..mtRefNo\",\"clnName\":\"$..clnName\",\"settleAmt\":\"$..settleAmt\",\"mtAmt\":\"$..mtAmt\",\"referRate\":\"$..referRate\",\"margin\":\"$..margin\",\"marginFree\":\"$..marginFree\",\"marginLevel\":\"$..marginLevel\",\"openOrders\":\"$..openOrders\",\"dataDate\":\"$..dataDate\",\"remark\":\"$..remark\",\"channel\":\"$..channel\",\"createDate\":\"$..createDate\",\"createBy\":\"$..createBy\",\"lastUpdateDate\":\"$..lastUpdateDate\",\"updateBy\":\"$..updateBy\",\"processBy\":\"$..processBy\",\"approveBy\":\"$..approveBy\",\"pspId\":\"$..pspId\",\"feeIndMin\":\"$..feeIndMin\",\"feeIndOrder\":\"$..feeIndOrder\",\"feeInd\":\"$..feeInd\"}'"},{"name":"pattern","value":"'#(\\w+)#'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":2,"hasContent":true},{"name":"需要从响应数据中提取的字段为：['mtRefNo', 'clnName', 'settleAmt', 'mtAmt', 'referRate', 'margin', 'marginFree', 'marginLevel', 'openOrders', 'dataDate', 'remark', 'channel', 'createDate', 'createBy', 'lastUpdateDate', 'updateBy', 'processBy', 'approveBy', 'pspId', 'feeIndMin', 'feeIndOrder', 'feeInd']","time":{"start":1683786434688,"stop":1683786434691,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：mtRefNo：15798241","time":{"start":1683786434692,"stop":1683786434694,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：clnName：TESTTYLER","time":{"start":1683786434695,"stop":1683786434699,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：settleAmt：1101","time":{"start":1683786434700,"stop":1683786434703,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：mtAmt：1101","time":{"start":1683786434703,"stop":1683786434706,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：referRate：1","time":{"start":1683786434707,"stop":1683786434710,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：margin：0","time":{"start":1683786434711,"stop":1683786434712,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：marginFree：1162","time":{"start":1683786434713,"stop":1683786434714,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：marginLevel：None","time":{"start":1683786434715,"stop":1683786434715,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：openOrders：N","time":{"start":1683786434717,"stop":1683786434719,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：dataDate：2023-05-11T06:24:19.000Z","time":{"start":1683786434719,"stop":1683786434721,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：remark：","time":{"start":1683786434721,"stop":1683786434723,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：channel：E-wallet","time":{"start":1683786434723,"stop":1683786434724,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：createDate：2023-05-11T06:27:12.299Z","time":{"start":1683786434725,"stop":1683786434727,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：createBy：SYSTEM","time":{"start":1683786434727,"stop":1683786434729,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：lastUpdateDate：2023-05-11T06:27:14.238Z","time":{"start":1683786434729,"stop":1683786434730,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：updateBy：","time":{"start":1683786434731,"stop":1683786434732,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：processBy：tyler.tang","time":{"start":1683786434733,"stop":1683786434734,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：approveBy：","time":{"start":1683786434735,"stop":1683786434737,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：pspId：","time":{"start":1683786434737,"stop":1683786434738,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：feeIndMin：None","time":{"start":1683786434739,"stop":1683786434739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：feeIndOrder：None","time":{"start":1683786434744,"stop":1683786434745,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从响应数据中设置的全局变量为：feeInd：","time":{"start":1683786434765,"stop":1683786434783,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"extract_str","value":"'{\"mtRefNo\":\"$..mtRefNo\",\"clnName\":\"$..clnName\",\"settleAmt\":\"$..settleAmt\",\"mtAmt\":\"$..mtAmt\",\"referRate\":\"$..referRate\",\"margin\":\"$..margin\",\"marginFree\":\"$..marginFree\",\"marginLevel\":\"$..marginLevel\",\"openOrders\":\"$..openOrders\",\"dataDate\":\"$..dataDate\",\"remark\":\"$..remark\",\"channel\":\"$..channel\",\"createDate\":\"$..createDate\",\"createBy\":\"$..createBy\",\"lastUpdateDate\":\"$..lastUpdateDate\",\"updateBy\":\"$..updateBy\",\"processBy\":\"$..processBy\",\"approveBy\":\"$..approveBy\",\"pspId\":\"$..pspId\",\"feeIndMin\":\"$..feeIndMin\",\"feeIndOrder\":\"$..feeIndOrder\",\"feeInd\":\"$..feeInd\"}'"},{"name":"resp_data","value":"{'code': 1002, 'message': 'Operated success', 'data': {'succ': [{'mtRefNo': '15798241', 'accountNumber': 1500000243, 'clnName': 'TESTTYLER', 'tradeAccount': '16300113', 'tradeAccountType': 'mt4', 'tradeAccountServer': 'mt4_s02', 'tradeAccountGroup': 'demoforex', 'country': 'AFG', 'accType': 'IB', 'currStatus': 'S', 'originalAmt': 1101, 'mtAmt': 1101, 'toCcy': 'USD', 'settleAmt': 1101, 'settleCcy': 'USD', 'referRate': 1, 'realRate': 1, 'feeInd': '', 'balance': 1162, 'equity': 1162, 'margin': 0, 'marginFree': 1162, 'marginLevel': None, 'openOrders': 'N', 'dataDate': '2023-05-11T06:24:19.000Z', 'remark': '', 'feeIndMin': None, 'feeIndOrder': None, 'charge': 0, 'channel': 'E-wallet', 'markUp': 0, 'source': 'System', 'createDate': '2023-05-11T06:27:12.299Z', 'createBy': 'SYSTEM', 'lastUpdateDate': '2023-05-11T06:27:14.238Z', 'updateBy': '', 'processBy': 'tyler.tang', 'approveBy': '', 'pspId': '', 'isDelete': False, 'mtRegion': 'SEA', 'sentTime': None, 'processDate': '2023-05-11T06:27:14.313Z', 'isFromFundAdjust': False, 'isFromSettlement': False, 'createDate_mt': '2023-05-11T09:27:12.299Z', 'mtRemark': '', 'wuuid': '16837864319082013359', 'negativeTradeAccountArr': [''], '_id': '645c8ac0b8d71500120b861e', 'ID': 178, 'reasons': {'cancelReason': '', 'failReason': '', 'feeChargedReason': [], '_id': '645c8ac0b8d71500120b861f'}, 'bankInfo': {'bankNameInfo': {'bankNameCountry': 'AFG', 'bankNameCurrency': 'USD', 'bankNameId': ''}, 'beneficiaryName': '', 'beneficiaryFirstName': '', 'beneficiaryMiddleName': '', 'beneficiaryLastName': '', 'beneficiaryAddress': '', 'bankCardNo': '', 'bank': '', 'bankAccout': '', 'branchName': '', 'branchCity': '', 'branchProvince': '', 'bankAddress': '', 'swiftCode': '', 'iban': '', 'postalCode': '', 'publicPrivateAccount': '', 'CNAPScode': '', 'issueMethod': '', '_id': '645c8ac0b8d71500120b8620'}, 'ewalletInfo': {'ewalletName': 'Skrill', 'ewalletType': 'Email', 'ewalletPayNo': '9999999@qq.com', 'others': '', '_id': '645c8ac0b8d71500120b8621'}, '__v': 0}], 'fail': []}}"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":26,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":27,"hasContent":true},{"name":"断言响应数据","time":{"start":1683786434783,"stop":1683786434802,"duration":19},"status":"passed","steps":[{"name":"判断断言字符串中是否有要替换的占位符","time":{"start":1683786434785,"stop":1683786434801,"duration":16},"status":"passed","steps":[{"name":"判断是否需要对字符串进行替换操作，将#key#替换成真实的值","time":{"start":1683786434787,"stop":1683786434791,"duration":4},"status":"passed","steps":[{"name":"字符串中没有要替换的mark","time":{"start":1683786434787,"stop":1683786434789,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的字符串为str：\n{\"message\":\"Operated success\"}","time":{"start":1683786434789,"stop":1683786434791,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"req_str","value":"'{\"message\":\"Operated success\"}'"},{"name":"pattern","value":"'#(\\w+)#'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":2,"hasContent":true},{"name":"断言响应结果中的 message字段的值 Operated success 是否与预期 Operated success 一致","time":{"start":1683786434793,"stop":1683786434801,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"resp_dict","value":"{'code': 1002, 'message': 'Operated success', 'data': {'succ': [{'mtRefNo': '15798241', 'accountNumber': 1500000243, 'clnName': 'TESTTYLER', 'tradeAccount': '16300113', 'tradeAccountType': 'mt4', 'tradeAccountServer': 'mt4_s02', 'tradeAccountGroup': 'demoforex', 'country': 'AFG', 'accType': 'IB', 'currStatus': 'S', 'originalAmt': 1101, 'mtAmt': 1101, 'toCcy': 'USD', 'settleAmt': 1101, 'settleCcy': 'USD', 'referRate': 1, 'realRate': 1, 'feeInd': '', 'balance': 1162, 'equity': 1162, 'margin': 0, 'marginFree': 1162, 'marginLevel': None, 'openOrders': 'N', 'dataDate': '2023-05-11T06:24:19.000Z', 'remark': '', 'feeIndMin': None, 'feeIndOrder': None, 'charge': 0, 'channel': 'E-wallet', 'markUp': 0, 'source': 'System', 'createDate': '2023-05-11T06:27:12.299Z', 'createBy': 'SYSTEM', 'lastUpdateDate': '2023-05-11T06:27:14.238Z', 'updateBy': '', 'processBy': 'tyler.tang', 'approveBy': '', 'pspId': '', 'isDelete': False, 'mtRegion': 'SEA', 'sentTime': None, 'processDate': '2023-05-11T06:27:14.313Z', 'isFromFundAdjust': False, 'isFromSettlement': False, 'createDate_mt': '2023-05-11T09:27:12.299Z', 'mtRemark': '', 'wuuid': '16837864319082013359', 'negativeTradeAccountArr': [''], '_id': '645c8ac0b8d71500120b861e', 'ID': 178, 'reasons': {'cancelReason': '', 'failReason': '', 'feeChargedReason': [], '_id': '645c8ac0b8d71500120b861f'}, 'bankInfo': {'bankNameInfo': {'bankNameCountry': 'AFG', 'bankNameCurrency': 'USD', 'bankNameId': ''}, 'beneficiaryName': '', 'beneficiaryFirstName': '', 'beneficiaryMiddleName': '', 'beneficiaryLastName': '', 'beneficiaryAddress': '', 'bankCardNo': '', 'bank': '', 'bankAccout': '', 'branchName': '', 'branchCity': '', 'branchProvince': '', 'bankAddress': '', 'swiftCode': '', 'iban': '', 'postalCode': '', 'publicPrivateAccount': '', 'CNAPScode': '', 'issueMethod': '', '_id': '645c8ac0b8d71500120b8620'}, 'ewalletInfo': {'ewalletName': 'Skrill', 'ewalletType': 'Email', 'ewalletPayNo': '9999999@qq.com', 'others': '', '_id': '645c8ac0b8d71500120b8621'}, '__v': 0}], 'fail': []}}"},{"name":"excepted_actions","value":"'{\"message\":\"Operated success\"}'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":4,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":5,"hasContent":true},{"name":"断言数据库","time":{"start":1683786434802,"stop":1683786435075,"duration":273},"status":"failed","statusMessage":"AssertionError: 断言失败\n","statusTrace":"  File \"c:\\Users\\tyler.tang\\Desktop\\Code\\atfx_api\\tools\\handle_requests.py\", line 211, in public_request\n    assert_db(case.excepted_db)\n  File \"C:\\Users\\tyler.tang\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"c:\\Users\\tyler.tang\\Desktop\\Code\\atfx_api\\tools\\handle_assert.py\", line 88, in assert_db\n    raise AssertionError(f'断言失败')\n","steps":[{"name":"对数据库进行断言","time":{"start":1683786434803,"stop":1683786435075,"duration":272},"status":"failed","statusMessage":"AssertionError: 断言失败\n","statusTrace":"  File \"C:\\Users\\tyler.tang\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"c:\\Users\\tyler.tang\\Desktop\\Code\\atfx_api\\tools\\handle_assert.py\", line 88, in assert_db\n    raise AssertionError(f'断言失败')\n","steps":[{"name":"判断是否需要对字符串进行替换操作，将#key#替换成真实的值","time":{"start":1683786434818,"stop":1683786434991,"duration":173},"status":"passed","steps":[{"name":"字符串中有要替换的mark,从全局变量或者内置方法中替换mark","time":{"start":1683786434818,"stop":1683786434834,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #mtRefNo# 替换为15798241","time":{"start":1683786434844,"stop":1683786434844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #account# 替换为1500000243","time":{"start":1683786434846,"stop":1683786434846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #mtAmt# 替换为1101","time":{"start":1683786434847,"stop":1683786434847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #tdaccount# 替换为16300113","time":{"start":1683786434849,"stop":1683786434849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #TDcurrency# 替换为USD","time":{"start":1683786434850,"stop":1683786434850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #settleAmt# 替换为1101","time":{"start":1683786434851,"stop":1683786434851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #ID# 替换为178","time":{"start":1683786434854,"stop":1683786434854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #withdrawalRate# 替换为1.0","time":{"start":1683786434856,"stop":1683786434856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #channel# 替换为E-wallet","time":{"start":1683786434857,"stop":1683786434857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #processBy# 替换为tyler.tang","time":{"start":1683786434858,"stop":1683786434858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #currency# 替换为USD","time":{"start":1683786434859,"stop":1683786434859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #feeIndMin# 替换为None","time":{"start":1683786434861,"stop":1683786434861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #feeIndOrder# 替换为None","time":{"start":1683786434862,"stop":1683786434862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #approveBy# 替换为","time":{"start":1683786434863,"stop":1683786434863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #clnName# 替换为TESTTYLER","time":{"start":1683786434865,"stop":1683786434865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #createDate# 替换为2023-05-11T06:27:12.299Z","time":{"start":1683786434870,"stop":1683786434870,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #updateBy# 替换为","time":{"start":1683786434881,"stop":1683786434881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #createBy# 替换为SYSTEM","time":{"start":1683786434913,"stop":1683786434913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #country# 替换为AFG","time":{"start":1683786434916,"stop":1683786434916,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #pspId# 替换为","time":{"start":1683786434918,"stop":1683786434918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #margin# 替换为0","time":{"start":1683786434920,"stop":1683786434920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #marginFree# 替换为1162","time":{"start":1683786434921,"stop":1683786434921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #marginLevel# 替换为None","time":{"start":1683786434921,"stop":1683786434923,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #referRate# 替换为1","time":{"start":1683786434924,"stop":1683786434924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #openOrders# 替换为N","time":{"start":1683786434926,"stop":1683786434926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #dataDate# 替换为2023-05-11T06:24:19.000Z","time":{"start":1683786434927,"stop":1683786434927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #lastUpdateDate# 替换为2023-05-11T06:27:14.238Z","time":{"start":1683786434940,"stop":1683786434940,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #AREA# 替换为MU","time":{"start":1683786434983,"stop":1683786434983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"从全局变量类的属性中获取值来替换字符串中的mark：将 #parentAccountNumber# 替换为188805","time":{"start":1683786434987,"stop":1683786434987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的字符串为str：\n[{\"sql\":\"SELECT Ticket_No,ATNumber, TYPE, Amount, MT4_Account, Currency, To_Amt, Bank_Ref_No, Curr_Status, Rate, Channel, Process_By, To_Ccy, Fee_Ind_min, Fee_Ind_order, Approve_By, Cln_Name, Create_Date, UpdateBy, CreateBy, Country, PspId, Margin, MarginFree, MarginLevel, ReferRate, OpenOrders, Data_Date,Last_Update,Close_Date,COMMENT, Entity, Agent FROM datawarehouse_two_mu_sit.transaction WHERE TYPE='withdrawal' ORDER BY id desc;\",\"check\":{'Ticket_No': 'MU-15798241', 'ATNumber': 1500000243, 'TYPE': 'withdrawal', 'Amount': '-1101', 'MT4_Account': 16300113, 'Currency': 'USD', 'To_Amt': 1101, 'Bank_Ref_No': '178', 'Curr_Status': 'Success', 'Rate': 1.0, 'Channel': 'E-wallet', 'Process_By': 'tyler.tang', 'To_Ccy': 'USD', 'Fee_Ind_min': None, 'Fee_Ind_order': None, 'Approve_By': '', 'Cln_Name': 'TESTTYLER', 'Create_Date': '2023-05-11T06:27:12.299Z', 'UpdateBy': '', 'CreateBy': 'SYSTEM', 'Country': 'AFG', 'PspId': '', 'Margin': 0, 'MarginFree': 1162, 'MarginLevel': None, 'ReferRate': 1, 'OpenOrders': 'N', 'Data_Date': '2023-05-11T06:24:19.000Z', 'Last_Update': '2023-05-11T06:27:14.238Z', 'Close_Date': '2023-05-11T06:27:14.238Z', 'COMMENT': 'Withdrawal-8-178', 'Entity': 'MU', 'Agent': '188805' }}]","time":{"start":1683786434987,"stop":1683786434991,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"req_str","value":"'[{\"sql\":\"SELECT Ticket_No,ATNumber, TYPE, Amount, MT4_Account, Currency, To_Amt, Bank_Ref_No, Curr_Status, Rate, Channel, Process_By, To_Ccy, Fee_Ind_min, Fee_Ind_order, Approve_By, Cln_Name, Create_Date, UpdateBy, CreateBy, Country, PspId, Margin, MarginFree, MarginLevel, ReferRate, OpenOrders, Data_Date,Last_Update,Close_Date,COMMENT, Entity, Agent FROM datawarehouse_two_mu_sit.transaction WHERE TYPE='withdrawal' ORDER BY id desc;\",\"check\":{'Ticket_No': 'MU-#mtRefNo#', 'ATNumber': #account#, 'TYPE': 'withdrawal', 'Amount': '-#mtAmt#', 'MT4_Account': #tdaccount#, 'Currency': '#TDcurrency#', 'To_Amt': #settleAmt#, 'Bank_Ref_No': '#ID#', 'Curr_Status': 'Success', 'Rate': #withdrawalRate#, 'Channel': '#channel#', 'Process_By': '#processBy#', 'To_Ccy': '#currency#', 'Fee_Ind_min': #feeIndMin#, 'Fee_Ind_order': #feeIndOrder#, 'Approve_By': '#approveBy#', 'Cln_Name': '#clnName#', 'Create_Date': '#createDate#', 'UpdateBy': '#updateBy#', 'CreateBy': '#createBy#', 'Country': '#country#', 'PspId': '#pspId#', 'Margin': #margin#, 'MarginFree': #marginFree#, 'MarginLevel': #marginLevel#, 'ReferRate': #referRate#, 'OpenOrders': '#openOrders#', 'Data_Date': '#dataDate#', 'Last_Update': '#lastUpdateDate#', 'Close_Date': '#lastUpdateDate#', 'COMMENT': 'Withdrawal-8-#ID#', 'Entity': '#AREA#', 'Agent': '#parentAccountNumber#' }}]'"},{"name":"pattern","value":"'#(\\w+)#'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":31,"hasContent":true},{"name":"断言数据库断言失败字段：[('Margin', None, 0), ('Rate', Decimal('0.00000'), 1.0), ('Process_By', '', 'tyler.tang'), ('Last_Update', '2023-05-11 06:27:12', '2023-05-11 06:27:14'), ('Data_Date', None, '2023-05-11 06:24:19'), ('OpenOrders', '', 'N'), ('MarginFree', None, 1162)]","time":{"start":1683786435065,"stop":1683786435066,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"断言数据库断言成功字段：[('Approve_By', '', ''), ('PspId', '', ''), ('Channel', 'E-wallet', 'E-wallet'), ('Country', 'AFG', 'AFG'), ('Currency', 'USD', 'USD'), ('Cln_Name', 'TESTTYLER', 'TESTTYLER'), ('MT4_Account', 16300113, 16300113), ('UpdateBy', '', ''), ('Create_Date', '2023-05-11 06:27:12', '2023-05-11 06:27:12'), ('TYPE', 'withdrawal', 'withdrawal'), ('Fee_Ind_order', None, None), ('Ticket_No', 'MU-15798241', 'MU-15798241'), ('ATNumber', 1500000243, 1500000243), ('Bank_Ref_No', '178', '178'), ('MarginLevel', None, None), ('Close_Date', '2023-05-11 06:27:14', '2023-05-11 06:27:14'), ('COMMENT', 'Withdrawal-8-178', 'Withdrawal-8-178'), ('Agent', '188805', '188805'), ('To_Ccy', 'USD', 'USD'), ('Entity', 'MU', 'MU'), ('Amount', '-1101', '-1101'), ('CreateBy', 'SYSTEM', 'SYSTEM'), ('Fee_Ind_min', None, None), ('Curr_Status', 'Success', 'Success'), ('ReferRate', 1.0, 1), ('To_Amt', 1101.0, 1101)]","time":{"start":1683786435066,"stop":1683786435075,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"assert_db_str","value":"'[{\"sql\":\"SELECT Ticket_No,ATNumber, TYPE, Amount, MT4_Account, Currency, To_Amt, Bank_Ref_No, Curr_Status, Rate, Channel, Process_By, To_Ccy, Fee_Ind_min, Fee_Ind_order, Approve_By, Cln_Name, Create_Date, UpdateBy, CreateBy, Country, PspId, Margin, MarginFree, MarginLevel, ReferRate, OpenOrders, Data_Date,Last_Update,Close_Date,COMMENT, Entity, Agent FROM datawarehouse_two_mu_sit.transaction WHERE TYPE='withdrawal' ORDER BY id desc;\",\"check\":{'Ticket_No': 'MU-#mtRefNo#', 'ATNumber': #account#, 'TYPE': 'withdrawal', 'Amount': '-#mtAmt#', 'MT4_Account': #tdaccount#, 'Currency': '#TDcurrency#', 'To_Amt': #settleAmt#, 'Bank_Ref_No': '#ID#', 'Curr_Status': 'Success', 'Rate': #withdrawalRate#, 'Channel': '#channel#', 'Process_By': '#processBy#', 'To_Ccy': '#currency#', 'Fee_Ind_min': #feeIndMin#, 'Fee_Ind_order': #feeIndOrder#, 'Approve_By': '#approveBy#', 'Cln_Name': '#clnName#', 'Create_Date': '#createDate#', 'UpdateBy': '#updateBy#', 'CreateBy': '#createBy#', 'Country': '#country#', 'PspId': '#pspId#', 'Margin': #margin#, 'MarginFree': #marginFree#, 'MarginLevel': #marginLevel#, 'ReferRate': #referRate#, 'OpenOrders': '#openOrders#', 'Data_Date': '#dataDate#', 'Last_Update': '#lastUpdateDate#', 'Close_Date': '#lastUpdateDate#', 'COMMENT': 'Withdrawal-8-#ID#', 'Entity': '#AREA#', 'Agent': '#parentAccountNumber#' }}]'"}],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":34,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":35,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":73,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":90,"hasContent":true},"afterStages":[{"name":"from_bos_to_cp_get_token::0","time":{"start":1683786435271,"stop":1683786435271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"deposit_withdrawal_info::0","time":{"start":1683786435272,"stop":1683786435272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"电子钱包出金"},{"name":"tag","value":"@pytest.mark.usefixtures('from_bos_to_cp_get_token')"},{"name":"tag","value":"high"},{"name":"tag","value":"run(order=8)"},{"name":"parentSuite","value":"testcase"},{"name":"subSuite","value":"TestEWalletWithdrawal"},{"name":"host","value":"SZVDI043"},{"name":"thread","value":"24288-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_old_mu_ewallet_withdrawal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["high","@pytest.mark.usefixtures('from_bos_to_cp_get_token')","run(order=8)"]},"source":"11a9d70ef9b86fbe.json","parameterValues":[]}